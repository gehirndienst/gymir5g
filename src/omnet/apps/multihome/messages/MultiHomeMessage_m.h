//
// Generated file, do not edit! Created by opp_msgtool 6.0 from omnet/apps/multihome/messages/MultiHomeMessage.msg.
//

#ifndef __MULTIHOMEMESSAGE_M_H
#define __MULTIHOMEMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class MultiHomeMessage;
/**
 * Class generated from <tt>omnet/apps/multihome/messages/MultiHomeMessage.msg:1</tt> by opp_msgtool.
 * <pre>
 * message MultiHomeMessage
 * {
 *     int id;
 *     int networkType;
 *     int payloadSize;
 *     simtime_t sendingTime;
 * }
 * </pre>
 */
class MultiHomeMessage : public ::omnetpp::cMessage
{
  protected:
    int id = 0;
    int networkType = 0;
    int payloadSize = 0;
    omnetpp::simtime_t sendingTime = SIMTIME_ZERO;

  private:
    void copy(const MultiHomeMessage& other);

  protected:
    bool operator==(const MultiHomeMessage&) = delete;

  public:
    MultiHomeMessage(const char *name=nullptr, short kind=0);
    MultiHomeMessage(const MultiHomeMessage& other);
    virtual ~MultiHomeMessage();
    MultiHomeMessage& operator=(const MultiHomeMessage& other);
    virtual MultiHomeMessage *dup() const override {return new MultiHomeMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getId() const;
    virtual void setId(int id);

    virtual int getNetworkType() const;
    virtual void setNetworkType(int networkType);

    virtual int getPayloadSize() const;
    virtual void setPayloadSize(int payloadSize);

    virtual omnetpp::simtime_t getSendingTime() const;
    virtual void setSendingTime(omnetpp::simtime_t sendingTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MultiHomeMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MultiHomeMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline MultiHomeMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<MultiHomeMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __MULTIHOMEMESSAGE_M_H

